!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},a=e=>{document.querySelectorAll(e.formSelector).forEach((t=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);o(n,a,t),n.forEach((l=>{l.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,t,t.validationMessage,o)})(e,l,t),o(n,a,t)}))}))})(t,e)}))};a(t);function l(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}var s=e+"d3610e9c6dce3cb370d8.svg";document.getElementById("header__logo").src=s;const c=document.getElementById("profile__avatar");let i,d;const u=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}toggleLike(e,t){const r=t?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:r,headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"138fe482-aa90-46db-b20b-613bcdba9e47","Content-Type":"application/json"}});u.getAppInfo().then((e=>{let[t,r]=e;console.log(t),console.log(r),t.forEach((e=>{const t=M(e);z.prepend(t)})),c.src=r.avatar,document.querySelector(".profile__name").textContent=r.name,document.querySelector(".profile__description").textContent=r.about}));const m=document.querySelector(".profile__edit-btn"),_=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),f=document.querySelector(".profile__add-btn"),v=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#avatar-modal"),b=y.querySelector(".modal__form"),S=y.querySelector(".modal__submit-btn"),p=y.querySelector(".modal__close-btn"),q=y.querySelector("#profile-avatar-input"),E=document.querySelector("#delete-modal"),k=E.querySelector(".modal__form"),g=E.querySelector(".modal__close-btn"),L=E.querySelectorAll(".modal__submit-btn")[1],C=document.querySelector("#edit-profile-modal"),$=C.querySelector(".modal__form"),j=C.querySelector(".modal__close-btn"),U=C.querySelector("#profile-name-input"),I=C.querySelector("#profile-description-input"),P=document.querySelector("#add-card-modal"),x=P.querySelector(".modal__form"),A=P.querySelector(".modal__submit-btn"),D=P.querySelector(".modal__close-btn"),B=P.querySelector("#add-card-name-input"),T=P.querySelector("#add-card-link-input"),w=document.querySelector("#preview-modal"),N=w.querySelector(".modal__image"),O=w.querySelector(".modal__title"),J=w.querySelector(".modal__close-btn"),H=document.querySelector("#card__template"),z=document.querySelector(".cards__list");function M(e){const t=H.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return 1==e.isLiked&&n.classList.add("card__like-btn_liked"),r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",(t=>function(e,t){const r=e.target.classList.contains("card__like-btn_liked");u.toggleLike(t,r).then((t=>{e.target.classList.toggle("card__like-btn_liked")})).catch((e=>console.log(e)))}(t,e._id))),a.addEventListener("click",(r=>function(e,t){i=e,d=t,F(E)}(t,e._id))),o.addEventListener("click",(()=>{F(w),O.textContent=e.name,N.src=e.link,N.alt=e.name})),t}function F(e){e.classList.add("modal_opened"),e.addEventListener("click",K),document.addEventListener("keydown",Q)}function G(e){e.classList.remove("modal_opened"),e.removeEventListener("click",K),document.removeEventListener("keydown",Q)}function K(e){e.target.classList.contains("modal")&&G(e.target)}function Q(e){"Escape"===e.key&&G(document.querySelector(".modal_opened"))}m.addEventListener("click",(()=>{var e,o;U.value=_.textContent,I.value=h.textContent,e=$,o=t,[U,I].forEach((t=>{r(e,t,o)})),F(C)})),j.addEventListener("click",(()=>{G(C)})),f.addEventListener("click",(()=>{F(P)})),D.addEventListener("click",(()=>{G(P)})),J.addEventListener("click",(()=>{G(w)})),v.addEventListener("click",(()=>{F(y)})),p.addEventListener("click",(()=>{G(y)})),g.addEventListener("click",(()=>{G(E)})),L.addEventListener("click",(()=>{G(E)})),$.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;l(t,!0),u.editUserInfo({name:U.value,about:I.value}).then((e=>{_.textContent=e.name,h.textContent=e.about,G(C)})).catch((e=>console.log(e))).finally((()=>{l(t,!1)}))})),x.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;l(r,!0),u.addCard({name:B.value,link:T.value}).then((r=>{const o=M(r);z.prepend(o),e.target.reset(),n(A,t),G(P)})).catch((e=>console.log(e))).finally((()=>{l(r,!1)}))})),b.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;l(r,!0),u.editAvatarInfo(q.value).then((r=>{c.src=r.avatar,e.target.reset(),n(S,t),G(y)})).catch((e=>console.log(e))).finally((()=>{l(r,!1)}))})),k.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;l(t,!0,"Delete","Deleting..."),u.deleteCard(d).then((()=>{i.remove(),G(E)})).catch(console.error).finally((()=>{l(t,!1,"Delete","Deleting...")}))})),a(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,