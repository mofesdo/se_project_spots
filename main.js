!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},n=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},a=e=>{document.querySelectorAll(e.formSelector).forEach((t=>{((e,t)=>{const o=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n(o,a,t),o.forEach((s=>{s.addEventListener("input",(function(){((e,t,n)=>{t.validity.valid?r(e,t,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,t,t.validationMessage,n)})(e,s,t),n(o,a,t)}))}))})(t,e)}))};a(t);function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?n:r}var c=e+"d3610e9c6dce3cb370d8.svg";document.getElementById("header__logo").src=c;const l=document.getElementById("profile__avatar");let i,d;const u=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r,this._checkResponse=e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>this._checkResponse(e)))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._checkResponse(e)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}toggleLike(e,t){const r=t?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:r,headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"138fe482-aa90-46db-b20b-613bcdba9e47","Content-Type":"application/json"}});u.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{const t=z(e);H.prepend(t)})),l.src=r.avatar,document.querySelector(".profile__name").textContent=r.name,document.querySelector(".profile__description").textContent=r.about})).catch((e=>console.error));const _=document.querySelector(".profile__edit-btn"),m=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),v=document.querySelector(".profile__add-btn"),f=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#avatar-modal"),b=y.querySelector(".modal__form"),p=y.querySelector(".modal__submit-btn"),S=y.querySelector(".modal__close-btn"),q=y.querySelector("#profile-avatar-input"),k=document.querySelector("#delete-modal"),E=k.querySelector(".modal__form"),g=k.querySelector(".modal__close-btn"),L=k.querySelectorAll(".modal__submit-btn")[1],C=document.querySelector("#edit-profile-modal"),U=C.querySelector(".modal__form"),I=C.querySelector(".modal__close-btn"),$=C.querySelector("#profile-name-input"),x=C.querySelector("#profile-description-input"),A=document.querySelector("#add-card-modal"),D=A.querySelector(".modal__form"),R=A.querySelector(".modal__submit-btn"),B=A.querySelector(".modal__close-btn"),T=A.querySelector("#add-card-name-input"),P=A.querySelector("#add-card-link-input"),w=document.querySelector("#preview-modal"),N=w.querySelector(".modal__image"),O=w.querySelector(".modal__title"),j=w.querySelector(".modal__close-btn"),J=document.querySelector("#card__template"),H=document.querySelector(".cards__list");function z(e){const t=J.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return 1==e.isLiked&&o.classList.add("card__like-btn_liked"),r.textContent=e.name,n.src=e.link,n.alt=e.name,o.addEventListener("click",(t=>function(e,t){const r=e.target.classList.contains("card__like-btn_liked");u.toggleLike(t,r).then((t=>{e.target.classList.toggle("card__like-btn_liked")})).catch((e=>console.log(e)))}(t,e._id))),a.addEventListener("click",(r=>function(e,t){i=e,d=t,M(k)}(t,e._id))),n.addEventListener("click",(()=>{M(w),O.textContent=e.name,N.src=e.link,N.alt=e.name})),t}function M(e){e.classList.add("modal_opened"),e.addEventListener("click",G),document.addEventListener("keydown",K)}function F(e){e.classList.remove("modal_opened"),e.removeEventListener("click",G),document.removeEventListener("keydown",K)}function G(e){e.target.classList.contains("modal")&&F(e.target)}function K(e){"Escape"===e.key&&F(document.querySelector(".modal_opened"))}_.addEventListener("click",(()=>{var e,n;$.value=m.textContent,x.value=h.textContent,e=U,n=t,[$,x].forEach((t=>{r(e,t,n)})),M(C)})),I.addEventListener("click",(()=>{F(C)})),v.addEventListener("click",(()=>{M(A)})),B.addEventListener("click",(()=>{F(A)})),j.addEventListener("click",(()=>{F(w)})),f.addEventListener("click",(()=>{M(y)})),S.addEventListener("click",(()=>{F(y)})),g.addEventListener("click",(()=>{F(k)})),L.addEventListener("click",(()=>{F(k)})),U.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;s(t,!0),u.editUserInfo({name:$.value,about:x.value}).then((e=>{m.textContent=e.name,h.textContent=e.about,F(C)})).catch((e=>console.log(e))).finally((()=>{s(t,!1)}))})),D.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;s(r,!0),u.addCard({name:T.value,link:P.value}).then((r=>{const n=z(r);H.prepend(n),e.target.reset(),o(R,t),F(A)})).catch((e=>console.log(e))).finally((()=>{s(r,!1)}))})),b.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;s(r,!0),u.editAvatarInfo(q.value).then((r=>{l.src=r.avatar,e.target.reset(),o(p,t),F(y)})).catch((e=>console.log(e))).finally((()=>{s(r,!1)}))})),E.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;s(t,!0,"Delete","Deleting..."),u.deleteCard(d).then((()=>{i.remove(),F(k)})).catch(console.error).finally((()=>{s(t,!1,"Delete","Deleting...")}))})),a(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,